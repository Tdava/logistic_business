import React, { useState } from 'react';
import './Advantages.scss';

interface Advantage {
  id: number;
  icon: string;
  title: string;
  description: string;
  stats: {
    value: string;
    label: string;
  }[];
}

const Advantages: React.FC = () => {
  const [activeCard, setActiveCard] = useState<number | null>(null);

  const advantages: Advantage[] = [
    {
      id: 1,
      icon: 'üåê',
      title: '–ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ',
      description: '–†–∞–∑–≤–∏—Ç–∞—è —Å–µ—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤ –∏ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É –∏–∑ –ª—é–±–æ–π —Ç–æ—á–∫–∏ –ö–∏—Ç–∞—è.',
      stats: [
        { value: '15+', label: '—Å—Ç—Ä–∞–Ω –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è' },
        { value: '50+', label: '–≥–æ—Ä–æ–¥–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏' },
        { value: '100+', label: '–ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤' }
      ]
    },
    {
      id: 2,
      icon: '‚ö°',
      title: '–°–∫–æ—Ä–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã',
      description: '–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –∏ –æ—Ç–ª–∞–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –æ–±–µ—Å–ø–µ—á–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏.',
      stats: [
        { value: '24/7', label: '–ø–æ–¥–¥–µ—Ä–∂–∫–∞' },
        { value: '-30%', label: '—ç–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏' },
        { value: '98%', label: '–≤–æ–≤—Ä–µ–º—è' }
      ]
    },
    {
      id: 3,
      icon: 'üõ°Ô∏è',
      title: '–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
      description: '–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –≥—Ä—É–∑–æ–≤, —Ç—â–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–∞–º–æ–∂–µ–Ω–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ.',
      stats: [
        { value: '0%', label: '–ø–æ—Ç–µ—Ä—å' },
        { value: '100%', label: '—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞' },
        { value: '10+', label: '–ª–µ—Ç –æ–ø—ã—Ç–∞' }
      ]
    }
  ];

  return (
    <section className="advantages">
      <div className="container">
        <h2>–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å</h2>
        <div className="advantages-grid">
          {advantages.map((advantage) => (
            <div
              key={advantage.id}
              className={`advantage-card ${activeCard === advantage.id ? 'active' : ''}`}
              onMouseEnter={() => setActiveCard(advantage.id)}
              onMouseLeave={() => setActiveCard(null)}
            >
              <div className="card-content">
                <div className="icon-wrapper">
                  <span className="icon">{advantage.icon}</span>
                </div>
                <h3>{advantage.title}</h3>
                <p className="description">{advantage.description}</p>
                <div className="stats-grid">
                  {advantage.stats.map((stat, index) => (
                    <div key={index} className="stat-item">
                      <span className="value">{stat.value}</span>
                      <span className="label">{stat.label}</span>
                    </div>
                  ))}
                </div>
              </div>
              <div className="hover-content">
                <div className="learn-more">
                  <span className="text">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</span>
                  <span className="arrow">‚Üí</span>
                </div>
              </div>
            </div>
          ))}
        </div>
        <div className="advantages-cta">
          <button 
            className="btn primary"
            onClick={() => document.getElementById('callback')?.scrollIntoView()}
          >
            –ù–∞—á–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ
          </button>
        </div>
      </div>
    </section>
  );
};

export default Advantages; 